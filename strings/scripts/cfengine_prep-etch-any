#!/bin/bash -x
#############################################################
# Prepare the system for cfengine, set up host as policyhost
# and as policy client for itself.
#############################################################

# First we set up some variables we need...
export PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
iface=$(/sbin/route -n|/usr/bin/awk -v e='0.0.0.0' '{if(($1==e)&&($2!=e)){print $NF;}}'|/usr/bin/head -1)
ipaddr=$(/sbin/ifconfig ${iface}|/bin/grep 'inet addr:'|/usr/bin/cut -d: -f2|/usr/bin/awk '{ print $1}')
hostname=$(hostname)
grep $ipaddr /etc/hosts || echo "$ip `hostname --fqdn` `hostname`" >> /etc/hosts
grep $hostname /etc/hostname || echo ${HOST_NAME} > /etc/hostname
hostname ${HOST_NAME}


# Then we install cfengine and set it up to run for either RH or Debian
if [ -f /etc/redhat-release ];then
    export CFROOT=/var/cfengine
    yum update -y && yum install -y cfengine
    /etc/init.d/cfengine stop
    # more stuff needed here
elif [ -f /etc/debian_version ];then
    export CFROOT="/var/lib/cfengine2"
    /usr/bin/apt-get update && /usr/bin/apt-get install cfengine2
    /etc/init.d/cfengine2 stop
    cp /etc/default/cfengine2 /etc/default/cfengine2.dist
    sed -e's/=0 *$/=1/' /etc/default/cfengine2.dist > /etc/default/cfengine2
    chmod 644 /etc/default/cfengine2
else
    echo "Cannot determine distribution or unsupported distribution";
    exit -1;
fi

# Then we copy our ppkey in order to authenticate self to self:
(cd ${CFROOT}/ppkeys; cp localhost.pub root-127.0.0.1.pub)
(cd ${CFROOT}/ppkeys; cp localhost.pub root-${ipaddr}.pub)

# Write out the default config files for a standalone system
#################################################################################################
/bin/cat<<EOCFS>/etc/cfengine/cfservd
control:
        domain                          = ( ExecResult("/bin/dnsdomainname") )
        sysadm                          = ( "sysadm@\${domain}" )
        workdir                         = ( "${CFROOT}" )
        bindir                          = ( "/usr/sbin" )
        cfrunCommand                    = ( "\${bindir}/cfagent" )
        IfElapsed                       = ( 1 )
        AllowUsers                      = ( root )
        LogAllConnections               = ( on )
        masterfiles                     = ( "${CFROOT}/masterfiles" )
        hostfiles                       = ( "${CFROOT}/privatefiles" )
        MaxConnections = ( 50 )
        interface                       = ( ExecResult("/sbin/route -n|/usr/bin/awk -v e='0.0.0.0' '{if((\$1==e)&&(\$2!=e)){print \$NF;}}'|/usr/bin/head -1") )
        IPAddress                       = ( ExecResult("/bin/ifconfig \${interface}|/bin/grep 'inet addr:'|/usr/bin/cut -d: -f2|/usr/bin/awk '{ print \$1}'") )
        AllowConnectionsFrom            = ( \${IPAddress}/32 )
admit:
        any::
                \$(cfrunCommand)                                         *
                \$(masterfiles)/config                                   *
                \$(masterfiles)/inputs                                   *
                \$(masterfiles)/modules            
EOCFS
#################################################################################################

#################################################################################################
/bin/cat<<EOCFU>/etc/cfengine/update.conf
# begin update.cf
control:
        actionsequence          = ( copy tidy )
        domain                  = ( ExecResult("/bin/dnsdomainname") )
        policyhost              = ( ExecResult("/bin/hostname -f") )
        master_cfinputs         = ( ${CFROOT}/masterfiles/inputs )
        master_cfconfig         = ( ${CFROOT}/masterfiles/config )
        master_cfmodules        = ( ${CFROOT}/masterfiles/modules )
        moduledirectory         = ( ${CFROOT}/modules )
        workdir                 = ( ${CFROOT} )
   linux::
        cf_install_dir  = ( /usr/sbin )
        SplayTime       = ( 1 )
copy:
    \$(master_cfinputs)   dest=\$(workdir)/inputs  r=inf mode=700 type=binary server=\$(policyhost) trustkey=true
    \$(master_cfconfig)  dest=\$(workdir)/config  r=inf mode=700 type=binary server=\$(policyhost) trustkey=true
    \$(master_cfmodules) dest=\$(workdir)/modules r=inf mode=700 type=binary server=\$(policyhost) trustkey=true
tidy:
        \$(workdir)/outputs pattern=* age=7
EOCFU
#################################################################################################

#################################################################################################
/bin/cat<<EOCFA>/etc/cfengine/cfagent.conf
control:
        actionsequence          = ( 
                                    module:lsb_classes
                                    module:addclass 
                                    copy editfiles processes shellcommands 
                                  )
        domain                  = ( ExecResult("/bin/dnsdomainname") )
        smtpserver              = ( localhost )
        sysadm                  = ( "sysadm@\${domain}" )
        configroot              = ( ${CFROOT}/masterfiles/config )
        moduledirectory         = ( ${CFROOT}/masterfiles/modules )
        ChecksumUpdates         = ( on )
        policyhost              = ( ExecResult("/bin/hostname -f") )
        AddInstallables         = ( etch ldap_server )
processes:
        "cfservd" restart "/usr/sbin/cfservd"
editfiles:
   linux::
   { /etc/crontab
        DeleteLinesContaining "cfexecd"
   }
groups:
        standalone_system            = ( all )
        ldap_server                  = ( all )

import:
shellcommands:
       ldap_server.debian::
           "/bin/echo 'I need to install OpenLDAP'"
       etch::
           "/bin/echo 'I am an etch system'"

EOCFA
#################################################################################################

# Fetch our public git repository 
TMPDIR=$(mktemp -d /var/tmp/gitroot.XXXXX)
(cd ${TMPDIR} ;git clone git://github.com/fapestniegd/superstring.git)
rsync -avzPC --delete ${TMPDIR}/superstring/strings/cfengine/ ${CFROOT}/masterfiles/ > /dev/null 2>&1
if [ -d "${TMPDIR}" -a "${TMPDIR}" != "/" ];then rm -fr ${TMPDIR}; fi

# Fire up cfengine, and get things going
/etc/init.d/cfengine2 start
/usr/sbin/cfexecd -F
/usr/sbin/cfexecd -F
/usr/sbin/cfagent -vKq
